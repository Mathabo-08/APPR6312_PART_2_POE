@page "/login"
@using GiftOftheGivers.WebApp.Authentication
@using GiftOftheGivers.WebApp.Services
@using GiftOftheGivers.WebApp.Services.DTOs
@using Microsoft.AspNetCore.Components.Authorization
@inject IUserService UserService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider

<div class="form-container">
    <div class="form-card">
        <h3 class="form-title">Welcome Back</h3>
        <p class="form-subtitle">Sign in to continue.</p>

        <EditForm Model="@_model" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="email">Email</label>
                <InputText id="email" type="email" class="form-control" @bind-Value="_model.Email" />
                <ValidationMessage For="@(() => _model.Email)" />
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="_model.Password" />
                <ValidationMessage For="@(() => _model.Password)" />
            </div>

            <button type="submit" class="btn-submit" disabled="@_isProcessing">Login</button>
        </EditForm>

        @if (!string.IsNullOrEmpty(_errorMessage))
        {
            <div class="snackbar error">@_errorMessage</div>
        }
    </div>
</div>

@code {
    private readonly UserLoginDto _model = new();
    private bool _isProcessing = false;
    private string? _errorMessage;

    private async Task HandleLogin()
    {
        _isProcessing = true;
        _errorMessage = null;

        var user = await UserService.ValidateUserCredentialsAsync(_model);

        if (user != null)
        {
            // Update the authentication state
            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(user);
            NavigationManager.NavigateTo("/", forceLoad: true); // Force reload to update layout
        }
        else
        {
            _errorMessage = "Invalid email or password.";
        }

        _isProcessing = false;
    }
}